// fonction de jeu
bool achat(t_joueur tab_joueur[],t_case plateau[],int i) 
{
    /* Permet d'acheter une propriete
       Prend en paramètre le tableau de joueur, le plateau et l'indice du joueur qui joue
       Renvoie true si le joueur a acheté une propriété sinon false
    */
        if(plateau[tab_joueur[i].position].groupe_cartes <= 9)//on verifie si la case est une propriété
       {
           if(plateau[tab_joueur[i].position].num_joueur==0)//on verifie si la case n'appartient a personne
          {
               char choix[10];
               afficher_case_jeu(plateau[tab_joueur[i].position]);
               do
               {
                   printf("\nVoulez vous achetez %s ? oui[1]  non[0]\n", plateau[tab_joueur[i].position].nom);//propose d'acheter
                   fflush(stdin);
                   gets(choix);
               } while (((choix[0] != 48) && (choix[0] != 49)) || (strlen(choix) > 1)); // 48 = 0 en code ascii
               if(choix[0] == 49) // Le joueur veut acheter
                {
                    if(tab_joueur[i].argent < plateau[tab_joueur[i].position].valeur)//on verfie si le joueur n'a pas les fonds nécessaires
                    {
                        printf("Fonds insuffisants !\n");
                        return false;
                    }
                    else if(tab_joueur[i].argent >= plateau[tab_joueur[i].position].valeur)//on verfie si le joueur a les fonds nécessaires
                    {
                        tab_joueur[i].argent-=plateau[tab_joueur[i].position].valeur;//on décrémente l'argent du joueur
                        plateau[tab_joueur[i].position].num_joueur=tab_joueur[i].numero;//on actualise le propriétaire de la case
                        return true;
                    }
                }
               if(choix[0] == 48) // Le joueur ne veut pas acheter
                {
                      return false;
                }
          }
      }
  printf("Vous ne pouvez pas achete cette case\n");
  return false;
}
